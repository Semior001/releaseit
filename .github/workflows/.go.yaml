name: Go

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  release:
      types: [created]

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: login to ghcr
        id: docker_login
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: extract tag name
        id: tag
        uses: actions/github-script@0.2.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            return context.payload.ref.replace(/\/refs\/tags\//, '');

      - name: build and push hugo site
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          context: .
          tags: ghcr.io/semior001/releaseit:latest,ghcr.io/semior001/releaseit:${{steps.tag.outputs.result}}

  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install go
        uses: actions/setup-go@v1
        with:
          go-version: 1.19

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.50.1
          skip-go-installation: true

      - name: Run tests and extract coverage
        run: |
          go test -timeout=60s -covermode=count -coverprofile=$GITHUB_WORKSPACE/profile.cov_tmp ./...
          cat $GITHUB_WORKSPACE/profile.cov_tmp | grep -v "mock_" > $GITHUB_WORKSPACE/profile.cov
        env:
          CGO_ENABLED: 0

      - name: Submit coverage to codecov
        run: |
          cat $GITHUB_WORKSPACE/profile.cov > $GITHUB_WORKSPACE/coverage.txt
          cd $GITHUB_WORKSPACE
          bash <(curl -s https://codecov.io/bash)
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
          GOFLAGS: "-mod=mod"
          CGO_ENABLED: 0